/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package kr.sgm.sql;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int EXIT = 5;
  /** RegularExpression Id. */
  int EOP = 6;
  /** RegularExpression Id. */
  int SEMICOLON = 7;
  /** RegularExpression Id. */
  int CREATE = 8;
  /** RegularExpression Id. */
  int TABLE = 9;
  /** RegularExpression Id. */
  int NOT = 10;
  /** RegularExpression Id. */
  int NULL = 11;
  /** RegularExpression Id. */
  int PRIMARY = 12;
  /** RegularExpression Id. */
  int KEY = 13;
  /** RegularExpression Id. */
  int FOREIGN = 14;
  /** RegularExpression Id. */
  int REFERENCES = 15;
  /** RegularExpression Id. */
  int INT = 16;
  /** RegularExpression Id. */
  int CHAR = 17;
  /** RegularExpression Id. */
  int DATE = 18;
  /** RegularExpression Id. */
  int DROP = 19;
  /** RegularExpression Id. */
  int SHOW = 20;
  /** RegularExpression Id. */
  int TABLES = 21;
  /** RegularExpression Id. */
  int DESC = 22;
  /** RegularExpression Id. */
  int SELECT = 23;
  /** RegularExpression Id. */
  int AS = 24;
  /** RegularExpression Id. */
  int FROM = 25;
  /** RegularExpression Id. */
  int WHERE = 26;
  /** RegularExpression Id. */
  int OR = 27;
  /** RegularExpression Id. */
  int AND = 28;
  /** RegularExpression Id. */
  int IS = 29;
  /** RegularExpression Id. */
  int INSERT = 30;
  /** RegularExpression Id. */
  int INTO = 31;
  /** RegularExpression Id. */
  int VALUES = 32;
  /** RegularExpression Id. */
  int DELETE = 33;
  /** RegularExpression Id. */
  int LEGAL_IDENTIFIER = 34;
  /** RegularExpression Id. */
  int UNDERSCORE = 35;
  /** RegularExpression Id. */
  int LEFT_PAREN = 36;
  /** RegularExpression Id. */
  int RIGHT_PAREN = 37;
  /** RegularExpression Id. */
  int COMMA = 38;
  /** RegularExpression Id. */
  int STAR = 39;
  /** RegularExpression Id. */
  int PERIOD = 40;
  /** RegularExpression Id. */
  int COMP_OP = 41;
  /** RegularExpression Id. */
  int CHAR_STRING = 42;
  /** RegularExpression Id. */
  int INT_VALUE = 43;
  /** RegularExpression Id. */
  int DIGIT = 44;
  /** RegularExpression Id. */
  int SIGN = 45;
  /** RegularExpression Id. */
  int DATE_VALUE = 46;
  /** RegularExpression Id. */
  int NNNN = 47;
  /** RegularExpression Id. */
  int NN = 48;
  /** RegularExpression Id. */
  int QUOTE = 49;
  /** RegularExpression Id. */
  int ALPHABET = 50;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "\"exit\"",
    "<EOP>",
    "\";\"",
    "\"create\"",
    "\"table\"",
    "\"not\"",
    "\"null\"",
    "\"primary\"",
    "\"key\"",
    "\"foreign\"",
    "\"references\"",
    "\"int\"",
    "\"char\"",
    "\"date\"",
    "\"drop\"",
    "\"show\"",
    "\"tables\"",
    "\"desc\"",
    "\"select\"",
    "\"as\"",
    "\"from\"",
    "\"where\"",
    "\"or\"",
    "\"and\"",
    "\"is\"",
    "\"insert\"",
    "\"into\"",
    "\"values\"",
    "\"delete\"",
    "<LEGAL_IDENTIFIER>",
    "\"_\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\"*\"",
    "\".\"",
    "<COMP_OP>",
    "<CHAR_STRING>",
    "<INT_VALUE>",
    "<DIGIT>",
    "<SIGN>",
    "<DATE_VALUE>",
    "<NNNN>",
    "<NN>",
    "<QUOTE>",
    "<ALPHABET>",
  };

}
