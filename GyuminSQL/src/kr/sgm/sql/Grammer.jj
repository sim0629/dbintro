options {
  static = false;
}

PARSER_BEGIN(Parser)

package kr.sgm.sql;

public class Parser {
  private static String PROMPT = "SQL_2009-11744> ";

  private static void print(String message) {
    System.out.print(PROMPT);
    System.out.println(message);
  }

  public static void main(String[] args) {
    while(true) {
      print("");
      Parser parser = new Parser(System.in);
      try {
        if(parser.Parse()) break;
      }catch(ParseException ex) {
        print("Syntax error");
      }
    }
  }
}

PARSER_END(Parser)

SKIP:
{
  " "
| "\t"
}

TOKEN:
{
  < EXIT: "exit" >
| < SEMICOLON: ";" >
| < EOL: "\r"|"\n"|"\r\n" >
}

TOKEN:
{
  < CREATE: "create" >
| < TABLE: "table" >
| < NOT: "not" >
| < NULL: "null" >
| < PRIMARY: "primary" >
| < KEY: "key" >
| < FOREIGN: "foreign" >
| < REFERENCES: "references" >
| < INT: "int" >
| < CHAR: "char" >
| < DATE: "date" >
| < DROP: "drop" >
| < SHOW: "show" >
| < TABLES: "tables" >
| < DESC: "desc" >
| < SELECT: "select" >
| < AS: "as" >
| < FROM: "from" >
| < WHERE: "where" >
| < OR: "or" >
| < AND: "and" >
| < IS: "is" >
| < INSERT: "insert" >
| < INTO: "into" >
| < VALUES: "values" >
| < DELETE: "delete" >
}

TOKEN:
{
  < CHAR_STRING: <QUOTE>(~["\'"])*<QUOTE> >
| < INT_VALUE: (<SIGN>)?(<DIGIT>)+ >
| < DIGIT: ["0"-"9"] >
| < SIGN: ["+","-"] >
| < DATE_VALUE: <NNNN>"-"<NN>"-"<NN> >
| < NNNN: <DIGIT><DIGIT><DIGIT><DIGIT> >
| < NN: <DIGIT><DIGIT> >
| < QUOTE: ["\'"] >
| < ALPHABET: ["a"-"z","A"-"Z"] >
}

boolean Parse():
{
  boolean exit;
}
{
  (
    Exit()
    { exit = true; }
  |
    (
      Query()
    )+
    { exit = false; }
  )
  < EOL >
  { return exit; }
}

void Exit():
{}
{
  < EXIT >
  < SEMICOLON >
}

void Query():
{
  Token t;
}
{
  t = < INT_VALUE >
  < SEMICOLON >
  { print(t.image); }
}
